version: "3.8"

networks:
    wvv:


services:
    nginx:
        container_name: nginx
        image: nginx:stable-alpine
        # restart: always

        ports:
            - 80:80
        depends_on:
            - backend-wvv
            # - postgres-wvv

        volumes:
            - ./conf/nginx.conf:/etc/nginx/nginx.conf
            - static_volume:/static
            - media_volume:/backend/media

        networks:
            - wvv

    backend-wvv:
        container_name: backend-wvv
        build:
            dockerfile: etc/django.Dockerfile
            context: .
        # command: >
        #     sh -c "python manage.py collectstatic --noinput && 
        #            python manage.py migrate && 
        #            gunicorn -b 0.0.0.0:8000 basis.wsgi:application"

        ports:
            - 8000:8000
        environment:
            - C_FORCE_ROOT=true
        links:
            - postgres-wvv:postgres-wvv.local
        volumes:
            - ./backend:/backend
            - static_volume:/backend/static
            - media_volume:/backend/media

        depends_on:
            - postgres-wvv

        networks:
            - wvv

    postgres-wvv:
        container_name: postgres-wvv
        image: postgres:15.3
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_USER=postgres
        volumes:
            - ./etc/init.sql:/docker-entrypoint-initdb.d/init.sql
            - postgres-volume-wvv:/var/lib/postgresql/data

        networks:
            - wvv

    frontend-wvv:
        container_name: frontend-wvv
        build:
            dockerfile: etc/frontend.Dockerfile
            context: .
        ports:
            - 3000:3000
        depends_on:
            - backend-wvv
            - nginx
        networks:
            - wvv

volumes:
    postgres-volume-wvv:
    pgadmin-volume-wvv:
    static_volume:
    media_volume:
